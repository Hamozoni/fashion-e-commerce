generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ordertoproduct {
  A String
  B String

  @@unique([A, B], map: "_OrderToProduct_AB_unique")
  @@index([B], map: "_OrderToProduct_B_index")
  @@map("_ordertoproduct")
}

model imagespath {
  id              String @id
  imagePath       String
  productImagesId String

  @@index([productImagesId], map: "ImagesPath_productImagesId_fkey")
}

model order {
  id              String       @id
  status          order_status @default(pendding)
  pricePaidInCent Int
  createdAt       DateTime     @default(now())
  updatedAt       DateTime
  userId          String

  @@index([userId], map: "Order_userId_fkey")
}

model product {
  id               String   @id @unique(map: "Product_id_key")
  name             String
  createdAt        DateTime @default(now())
  updateddAt       DateTime
  priceInCent      Int
  offerPriceInCent Int?     @default(0)
  isOffer          Boolean  @default(false)
  isAvailable      Boolean  @default(true)
  description      String   @db.Text
  count            Int      @default(1)
  category         String
  subCategory      String
  aboutThisItem    String   @db.Text
  serialNumber     String   @unique(map: "Product_serialNumber_key")
  selectedSize     String?
  selectedColor    String?
}

model productimages {
  id        String @id
  color     String
  productId String

  @@index([productId], map: "ProductImages_productId_fkey")
}

model productsizes {
  id          String  @id
  name        String
  description String?
  productId   String

  @@index([productId], map: "ProductSizes_productId_fkey")
}

model reviews {
  id        String @id
  text      String
  productId String
  autherId  String
  rating    Int    @default(7)

  @@index([autherId], map: "Reviews_autherId_fkey")
  @@index([productId], map: "Reviews_productId_fkey")
}

model specifications {
  id        String @id
  key       String
  value     String
  productId String

  @@index([productId], map: "Specifications_productId_fkey")
}

model user {
  id         String    @id
  createdAt  DateTime  @default(now())
  email      String    @unique(map: "User_email_key")
  userName   String?
  avatarPath String?
  role       user_role @default(USER)
}

enum order_status {
  pendding
}

enum user_role {
  USER
  ADMIN
}
