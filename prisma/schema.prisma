// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id String @id @unique @default(uuid())
  name String
  createdAt DateTime @default(now())
  updateddAt DateTime @updatedAt
  priceInCent Int
  offerPriceInCent Int? @default(0)
  isAvailable Boolean @default(true)
  description  String @db.Text
  specifications Specifications[]
  imagesPath String
  count Int
  orders Order[]
  category String
  subCategory String
  reviews Reviews[]
  aboutThisItem String @db.Text
  serialNumber Int @default(0000000000)
}

model Specifications{
  id String @id @default(uuid())
  name String
  specification String
  product Product  @relation(fields: [productId], references: [id])
  productId String
}

model Reviews {
  id String @id @default(uuid())
  text String
  productId String
  autherId String
  user User @relation(fields: [autherId],references: [id])
  product Product @relation(fields: [productId],references: [id])
}


model User {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  email String @unique
  userName String?
  avatarPath String?
  role      Role     @default(USER)
  orders Order[]
  reviews Reviews[]
}

model Order {
  id String @id @default(uuid())
  status Status @default(pendding)
  pricePaidInCent Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products Product[]
  userId String
  user User @relation(fields: [userId],references: [id])
}

enum Role {
  USER
  ADMIN
}

enum Status {
  pendding
}

